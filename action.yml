name: "gmod-upload"
description: "Packs a Garry's Mod addon to a .gma file and uploads to the Steam workshop"

branding:
  icon: box
  color: gray-dark

inputs:
  changelog:
    description: "Changelog"
    required: false
    default: ""
  id:
    description: "Workshop item id"
    required: true
  config:
    description: "Path of addon.json, or json file to treat as such."
    required: false
    default: ""
  title:
    description: "The name of the Workshop item"
    required: false
    default: ""
  type:
    # One of: ServerContent, Gamemode, Map, Weapon, Vehicle, NPC, Tool, Effects, Model, Entity
    description: "The type of addon"
    required: false
    default: "ServerContent"
  tag1:
    # One of: fun, roleplay, scenic, movie, realism, cartoon, water, comic, build
    description: "First addon tag"
    required: false
    default: "build"
  tag2:
    # One of: fun, roleplay, scenic, movie, realism, cartoon, water, comic, build
    description: "Second addon tag"
    required: false
    default: ""
  tag3:
    # One of: fun, roleplay, scenic, movie, realism, cartoon, water, comic, build
    description: "Third addon tag"
    required: false
    default: ""
  remove_lua:
    description: "Remove Lua files before uploading"
    required: false
    default: "false"
    type: boolean

runs:
  using: "composite"
  steps:
    - name: Check if project is already cloned
      shell: bash
      run: |
        if [ -d $GITHUB_WORKSPACE/project ]; then
          echo "project_exists=true" >> $GITHUB_ENV
        else
          echo "project_exists=false" >> $GITHUB_ENV
        fi

    - name: Checkout project
      if: env.project_exists == 'false'
      uses: actions/checkout@v4
      with:
        path: project

    - name: Download SteamCMD
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install lib32gcc-s1
        mkdir ~/Steam
        curl -sqL "https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz" | tar zxvf - -C ~/Steam

    - name: Download Lua 5.3
      shell: bash
      run: |
        sudo apt-get install lua5.3

        # Substitute the placeholder with the full path to the library
        LIB_PATH=${{ github.action_path }}
        sed -i "s~{{LIB_PATH}}~$LIB_PATH~g" $LIB_PATH/config.lua
        sed -i "s~{{LIB_PATH}}~$LIB_PATH~g" $LIB_PATH/gma.lua

    - name: Run config builder
      shell: bash
      run: |
        cd ${{ github.action_path }}
        pwd
        ls -alh

        CONFIG_INPUT=${{ inputs.config }}
        if [ -n "$CONFIG_INPUT" ]; then
          echo "config_file=$GITHUB_WORKSPACE/project/$CONFIG_INPUT" >> "$GITHUB_ENV"
          echo "::notice title=Config file input provided, ignoring all other inputs::$CONFIG_INPUT"
          cat $config_file
          exit 0
        fi

        echo Title: ${{ inputs.title }}
        echo Type: ${{ inputs.type }}
        echo Tag1: ${{ inputs.tag1 }}
        echo Tag2: ${{ inputs.tag2 }}
        echo Tag3: ${{ inputs.tag3 }}
        echo Remove Lua: ${{ inputs.remove_lua }}

        set +e
        CONFIG_OUTPUT=$(lua5.3 config.lua \
            '${{ inputs.title }}' \
            '${{ inputs.type }}' \
            '${{ inputs.tag1 }}' \
            '${{ inputs.tag2 }}' \
            '${{ inputs.tag3 }}' \
            '${{ inputs.remove_lua }}')
        CONFIG_EXIT_STATUS=$?
        set -e

        # Handle a nonzero exit code as a lua error
        if [ "$CONFIG_EXIT_STATUS" -ne 0 ]; then
          echo "$CONFIG_OUTPUT"
          exit 1
        else
          # Set the path of the generated addon json in the local environment
          echo "config_file=${{ github.action_path }}/$CONFIG_OUTPUT" >> "$GITHUB_ENV"
          cat ${{ github.action_path }}/$CONFIG_OUTPUT
        fi

    - name: Run gma packer
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/project
        lua5.3 ${{ github.action_path }}/gma.lua $GITHUB_WORKSPACE/project/${{ inputs.id }}.gma "$config_file"

    - name: Create .vdf file
      shell: bash
      run: |
        cat > $GITHUB_WORKSPACE/project/workshop.vdf << EOF
          "workshopitem" {
            "appid" "4000"
            "publishedfileid" "${{ inputs.id }}"
            "contentfolder" "$GITHUB_WORKSPACE/project/${{ inputs.id }}.gma"
            "changenote" "${{ inputs.changelog }}"
          }
        EOF

        cat $GITHUB_WORKSPACE/project/workshop.vdf
        
    - name: Run SteamCMD
      shell: bash
      run: |
        cd ~/Steam
        mkdir "./config"
        echo "Copying config/config.vdf..."
        echo "$STEAM_CONFIG_VDF" > "./config/config.vdf"
        ./steamcmd.sh +login $STEAM_USERNAME +workshop_build_item $GITHUB_WORKSPACE/project/workshop.vdf +quit

    - name: Print Errors
      if: failure()
      shell: bash
      run: |
        echo ~/Steam/logs/stderr.txt
        echo "$(cat ~/Steam/logs/stderr.txt)"
        echo
        echo ~/Steam/logs/workshop_log.txt
        echo "$(cat ~/Steam/logs/workshop_log.txt)"
        echo
        echo ~/Steam/workshopbuilds/depot_build_4000.log
        echo "$(cat ~/Steam/workshopbuilds/depot_build_4000.log)"
